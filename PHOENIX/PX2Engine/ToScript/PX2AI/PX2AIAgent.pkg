// PX2AIAgent.pkg

	class AIAgent : public AIAgentBase
	{
	public:
		AIAgent();
		AIAgent(Node *node);
		virtual ~AIAgent();
		
		AVector ForceToAlign(float maxDistance, float maxAngle, 
			const AIAgentGroup& group);
		AVector ForceToAvoidAgents(const std::vector<AIAgent*>& agents,
			float predictionTime = 2.0f);
		AVector ForceToAvoidObjects(
			const std::vector<AIAgentObject*>& objects,
			float predictionTime = 2.0f);
			
		AVector ForceToCombine(float maxDistance, float maxAngle,
			AIAgent *agent);
		AVector ForceToCombine(float maxDistance, float maxAngle,
			const AIAgentGroup& group);
		AVector ForceToCombine(float maxDistance, float maxAngle, 
			const std::vector<AIAgent*>& agents);
			
		AVector ForceToFleePosition(const APoint& position);
		AVector ForceToFollowPath(float predictionTime = 2.0f);
		AVector ForceToFollowPath(AIAgentPath& path, 
			float predictionTime = 2.0f);
		AVector ForceToPosition(const APoint& position);
		
		AVector ForceToSeparateAgents(float maxDistance, float maxAngle);
		AVector ForceToSeparate(float maxDistance, float maxAngle,
			const AIAgentGroup& group);
		AVector ForceToSeparate(float maxDistance, float maxAngle,
			std::vector<AIAgent*> agents);
		AVector ForceToSeparate(float maxDistance, float maxAngle,
			AIAgent *agent);	
			
		AVector ForceToStayOnPath(float predictionTime = 2.0f);
		AVector ForceToStayOnPath(AIAgentPath& path, 
			float predictionTime = 2.0f);
		AVector ForceToTargetSpeed(const float speed);
		AVector ForceToWander(float deltaMilliseconds);

		AVector ForceToAvoidAgents(float predictionTime = 2.0f);
		AVector ForceToAvoidObjects(float predictionTime = 2.0f);
		
		void ApplyForce(const AVector &force);
		
		APoint PredictFuturePosition(float predictionTime) const;

		void RemovePath();
		void SetForward(const AVector& forward);
		void SetForwarding(const AVector& forwarding);
		void SetRotate(const HMatrix& mat);
		void SetHeight(float  height);
		void SetMaxForce(float force);
		void SetMaxSpeed(float speed);
		void SetPath(const AIAgentPath& path);
		void SetSpeed(float speed);
		void SetTarget(const APoint& target);
		void SetTargetRadius(float radius);
		void SetTeam(const std::string& team);
		void SetVelocity(const AVector& velocity);

		AVector GetForward() const;

		void SetHealth(float health);
		float GetHealth() const;

		void SetRadius(float radius);
		virtual float GetRadius() const;

		float GetHeight() const;

		float GetMaxForce() const;
		float GetMaxSpeed() const;

		float GetSpeed() const;

		APoint GetTarget() const;
		float GetTargetRadius() const;

		AVector GetUp() const;
		AVector GetVelocity() const;
	};
